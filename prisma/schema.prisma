generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  user_id    String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String   @unique
  isVerified Boolean  @default(false)
  password   String
  salt       String
  email      String   @unique
  role       UserRole @default(USER)
  // relational
  phews      Phew[]
  folders    Folder[]
  // 
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum UserRole {
  STEM
  USER
  SU
}

model Phew {
  phew_id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  readonly         Boolean  @default(false)
  content          String?  @default("")
  password         String
  salt             String
  private          Boolean  @default(true)
  // relations
  user_id          String   @db.ObjectId
  user             User     @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  parent_folder_id String   @db.ObjectId
  parent           Folder   @relation(fields: [parent_folder_id], references: [folder_id], onDelete: Cascade)
  // timestamps
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Folder {
  folder_id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  readonly         Boolean  @default(false)
  private          Boolean  @default(true)
  // relations
  user_id          String   @db.ObjectId
  user             User     @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  phews            Phew[]
  Folders          Folder[] @relation(name: "parent")
  parent           Folder?  @relation(name: "parent", fields: [parent_folder_id], references: [folder_id], onDelete: NoAction, onUpdate: NoAction)
  parent_folder_id String?  @db.ObjectId
  // timestamps
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}
